/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ViewStateFacet,
  ViewStateFacetInterface,
} from "../ViewStateFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistAccusals",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistCleanups",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
    ],
    name: "getArchaeologistSuccessOnSarcophagus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistsarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getAvailableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getCursedBond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "embalmer",
        type: "address",
      },
    ],
    name: "getEmbalmersarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getFreeBond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProtocolFeeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "getRecipientsarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
    ],
    name: "getSarcophagus",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum LibTypes.SarcophagusState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "canBeTransferred",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "minShards",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "resurrectionTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resurrectionWindow",
            type: "uint256",
          },
          {
            internalType: "string[]",
            name: "arweaveTxIds",
            type: "string[]",
          },
          {
            internalType: "uint256",
            name: "storageFee",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "embalmer",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipientAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "arweaveArchaeologist",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "archaeologists",
            type: "address[]",
          },
        ],
        internalType: "struct LibTypes.Sarcophagus",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getSarcophagusArchaeologist",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "diggingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "diggingFeesPaid",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "doubleHashedShard",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "unencryptedShard",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "curseTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct LibTypes.ArchaeologistStorage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalProtocolFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611893806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638ea52bb211610097578063dc231f4311610066578063dc231f43146102e6578063de116f0614610316578063ef60e4e714610346578063f1a0393814610376576100f5565b80638ea52bb21461024a5780638fbd55d2146102685780639c54563914610298578063c34e9bff146102b6576100f5565b80636ba5c8ef116100d35780636ba5c8ef1461018a5780637819551b146101ba578063873e31fa146101ea57806387927ce61461021a576100f5565b806342e10bc8146100fa5780634d0b67671461012a57806357babbaf1461015a575b600080fd5b610114600480360381019061010f9190610f70565b6103a6565b604051610121919061104c565b60405180910390f35b610144600480360381019061013f9190610f70565b61044f565b604051610151919061112f565b60405180910390f35b610174600480360381019061016f919061117d565b6104e9565b60405161018191906111b9565b60405180910390f35b6101a4600480360381019061019f9190611200565b610533565b6040516101b1919061124f565b60405180910390f35b6101d460048036038101906101cf9190610f70565b61059d565b6040516101e1919061112f565b60405180910390f35b61020460048036038101906101ff9190610f70565b610637565b6040516102119190611279565b60405180910390f35b610234600480360381019061022f9190610f70565b610682565b6040516102419190611279565b60405180910390f35b6102526106d0565b60405161025f9190611279565b60405180910390f35b610282600480360381019061027d9190610f70565b6106dc565b60405161028f9190611279565b60405180910390f35b6102a061072a565b6040516102ad9190611279565b60405180910390f35b6102d060048036038101906102cb9190610f70565b610736565b6040516102dd919061112f565b60405180910390f35b61030060048036038101906102fb9190611294565b6107d0565b60405161030d91906113e3565b60405180910390f35b610330600480360381019061032b9190611405565b6108f8565b60405161033d91906117ac565b60405180910390f35b610360600480360381019061035b9190610f70565b610cb5565b60405161036d919061112f565b60405180910390f35b610390600480360381019061038b9190610f70565b610d4f565b60405161039d919061112f565b60405180910390f35b6103ae610de9565b600060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c00160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050919050565b60606000600f0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156104dd57602002820191906000526020600020905b8154815260200190600101908083116104c9575b50505050509050919050565b6000806005018281548110610501576105006117ce565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008060070160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905092915050565b60606000600a0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561062b57602002820191906000526020600020905b815481526020019060010190808311610617575b50505050509050919050565b600080600b0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401549050919050565b60008060020154905090565b60008060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050919050565b60008060030154905090565b60606000600d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156107c457602002820191906000526020600020905b8154815260200190600101908083116107b0575b50505050509050919050565b6107d8610e21565b6000601101600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820180546108649061182c565b80601f01602080910402602001604051908101604052809291908181526020018280546108909061182c565b80156108dd5780601f106108b2576101008083540402835291602001916108dd565b820191906000526020600020905b8154815290600101906020018083116108c057829003601f168201915b50505050508152602001600482015481525050905092915050565b610900610e53565b6000600c016000838152602001908152602001600020604051806101800160405290816000820180546109329061182c565b80601f016020809104026020016040519081016040528092919081815260200182805461095e9061182c565b80156109ab5780601f10610980576101008083540402835291602001916109ab565b820191906000526020600020905b81548152906001019060200180831161098e57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660028111156109d9576109d8611487565b5b60028111156109eb576109ea611487565b5b81526020016001820160019054906101000a900460ff161515151581526020016001820160029054906101000a900460ff1660ff1660ff168152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610b0c578382906000526020600020018054610a7f9061182c565b80601f0160208091040260200160405190810160405280929190818152602001828054610aab9061182c565b8015610af85780601f10610acd57610100808354040283529160200191610af8565b820191906000526020600020905b815481529060010190602001808311610adb57829003601f168201915b505050505081526020019060010190610a60565b505050508152602001600582015481526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160098201805480602002602001604051908101604052809291908181526020018280548015610ca557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c5b575b5050505050815250509050919050565b60606000600e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610d4357602002820191906000526020600020905b815481526020019060010190808311610d2f575b50505050509050919050565b6060600060090160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610ddd57602002820191906000526020600020905b815481526020019060010190808311610dc9575b50505050509050919050565b6040518060c0016040528060001515815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060a0016040528060008152602001600081526020016000801916815260200160608152602001600081525090565b6040518061018001604052806060815260200160006002811115610e7a57610e79611487565b5b8152602001600015158152602001600060ff16815260200160008152602001600081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3d82610f12565b9050919050565b610f4d81610f32565b8114610f5857600080fd5b50565b600081359050610f6a81610f44565b92915050565b600060208284031215610f8657610f85610f0d565b5b6000610f9484828501610f5b565b91505092915050565b60008115159050919050565b610fb281610f9d565b82525050565b6000819050919050565b610fcb81610fb8565b82525050565b60c082016000820151610fe76000850182610fa9565b506020820151610ffa6020850182610fc2565b50604082015161100d6040850182610fc2565b5060608201516110206060850182610fc2565b5060808201516110336080850182610fc2565b5060a082015161104660a0850182610fc2565b50505050565b600060c0820190506110616000830184610fd1565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6110a681611093565b82525050565b60006110b8838361109d565b60208301905092915050565b6000602082019050919050565b60006110dc82611067565b6110e68185611072565b93506110f183611083565b8060005b8381101561112257815161110988826110ac565b9750611114836110c4565b9250506001810190506110f5565b5085935050505092915050565b6000602082019050818103600083015261114981846110d1565b905092915050565b61115a81610fb8565b811461116557600080fd5b50565b60008135905061117781611151565b92915050565b60006020828403121561119357611192610f0d565b5b60006111a184828501611168565b91505092915050565b6111b381610f32565b82525050565b60006020820190506111ce60008301846111aa565b92915050565b6111dd81611093565b81146111e857600080fd5b50565b6000813590506111fa816111d4565b92915050565b6000806040838503121561121757611216610f0d565b5b600061122585828601610f5b565b9250506020611236858286016111eb565b9150509250929050565b61124981610f9d565b82525050565b60006020820190506112646000830184611240565b92915050565b61127381610fb8565b82525050565b600060208201905061128e600083018461126a565b92915050565b600080604083850312156112ab576112aa610f0d565b5b60006112b9858286016111eb565b92505060206112ca85828601610f5b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561130e5780820151818401526020810190506112f3565b8381111561131d576000848401525b50505050565b6000601f19601f8301169050919050565b600061133f826112d4565b61134981856112df565b93506113598185602086016112f0565b61136281611323565b840191505092915050565b600060a0830160008301516113856000860182610fc2565b5060208301516113986020860182610fc2565b5060408301516113ab604086018261109d565b50606083015184820360608601526113c38282611334565b91505060808301516113d86080860182610fc2565b508091505092915050565b600060208201905081810360008301526113fd818461136d565b905092915050565b60006020828403121561141b5761141a610f0d565b5b6000611429848285016111eb565b91505092915050565b600081519050919050565b600082825260208201905092915050565b600061145982611432565b611463818561143d565b93506114738185602086016112f0565b61147c81611323565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106114c7576114c6611487565b5b50565b60008190506114d8826114b6565b919050565b60006114e8826114ca565b9050919050565b6114f8816114dd565b82525050565b600060ff82169050919050565b611514816114fe565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611552838361144e565b905092915050565b6000602082019050919050565b60006115728261151a565b61157c8185611525565b93508360208202850161158e85611536565b8060005b858110156115ca57848403895281516115ab8582611546565b94506115b68361155a565b925060208a01995050600181019050611592565b50829750879550505050505092915050565b6115e581610f32565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061162383836115dc565b60208301905092915050565b6000602082019050919050565b6000611647826115eb565b61165181856115f6565b935061165c83611607565b8060005b8381101561168d5781516116748882611617565b975061167f8361162f565b925050600181019050611660565b5085935050505092915050565b60006101808301600083015184820360008601526116b8828261144e565b91505060208301516116cd60208601826114ef565b5060408301516116e06040860182610fa9565b5060608301516116f3606086018261150b565b5060808301516117066080860182610fc2565b5060a083015161171960a0860182610fc2565b5060c083015184820360c08601526117318282611567565b91505060e083015161174660e0860182610fc2565b5061010083015161175b6101008601826115dc565b506101208301516117706101208601826115dc565b506101408301516117856101408601826115dc565b5061016083015184820361016086015261179f828261163c565b9150508091505092915050565b600060208201905081810360008301526117c6818461169a565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061184457607f821691505b602082108103611857576118566117fd565b5b5091905056fea2646970667358221220975181b27ce47b154e827b01a075d3afad0723c44757b555afea953975fe2ef464736f6c634300080d0033";

export class ViewStateFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ViewStateFacet> {
    return super.deploy(overrides || {}) as Promise<ViewStateFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ViewStateFacet {
    return super.attach(address) as ViewStateFacet;
  }
  connect(signer: Signer): ViewStateFacet__factory {
    return super.connect(signer) as ViewStateFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ViewStateFacetInterface {
    return new utils.Interface(_abi) as ViewStateFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ViewStateFacet {
    return new Contract(address, _abi, signerOrProvider) as ViewStateFacet;
  }
}
