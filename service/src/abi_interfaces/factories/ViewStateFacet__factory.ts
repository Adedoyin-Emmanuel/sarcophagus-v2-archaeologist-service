/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ViewStateFacet,
  ViewStateFacetInterface,
} from "../ViewStateFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistAccusals",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistCleanups",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistProfile",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "minimumDiggingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maximumRewrapInterval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "freeBond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cursedBond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewards",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "peerId",
            type: "string",
          },
        ],
        internalType: "struct LibTypes.ArchaeologistProfile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getArchaeologistProfileAddressAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getArchaeologistProfileAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistSarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
    ],
    name: "getArchaeologistSuccessOnSarcophagus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getAvailableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getCursedBond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "embalmer",
        type: "address",
      },
    ],
    name: "getEmbalmerSarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getFreeBond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProtocolFeeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "getRecipientSarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
    ],
    name: "getSarcophagus",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum LibTypes.SarcophagusState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "canBeTransferred",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "minShards",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "resurrectionTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resurrectionWindow",
            type: "uint256",
          },
          {
            internalType: "string[]",
            name: "arweaveTxIds",
            type: "string[]",
          },
          {
            internalType: "uint256",
            name: "storageFee",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "embalmer",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipientAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "arweaveArchaeologist",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "archaeologists",
            type: "address[]",
          },
        ],
        internalType: "struct LibTypes.Sarcophagus",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getSarcophagusArchaeologist",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "diggingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "diggingFeesPaid",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "doubleHashedShard",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "unencryptedShard",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "curseTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct LibTypes.ArchaeologistStorage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalProtocolFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a9f806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638ea52bb211610097578063dc231f4311610066578063dc231f431461030f578063de116f061461033f578063ef60e4e71461036f578063f1a039381461039f57610100565b80638ea52bb2146102735780638fbd55d2146102915780639c545639146102c1578063c34e9bff146102df57610100565b80636ba5c8ef116100d35780636ba5c8ef146101b35780637819551b146101e3578063873e31fa1461021357806387927ce61461024357610100565b80633fbb89301461010557806342e10bc8146101235780634d0b67671461015357806357babbaf14610183575b600080fd5b61010d6103cf565b60405161011a9190611150565b60405180910390f35b61013d600480360381019061013891906111a3565b610460565b60405161014a9190611339565b60405180910390f35b61016d600480360381019061016891906111a3565b61059b565b60405161017a9190611423565b60405180910390f35b61019d60048036038101906101989190611471565b610635565b6040516101aa91906114ad565b60405180910390f35b6101cd60048036038101906101c891906114f4565b61067f565b6040516101da9190611543565b60405180910390f35b6101fd60048036038101906101f891906111a3565b6106e9565b60405161020a9190611423565b60405180910390f35b61022d600480360381019061022891906111a3565b610783565b60405161023a919061156d565b60405180910390f35b61025d600480360381019061025891906111a3565b6107ce565b60405161026a919061156d565b60405180910390f35b61027b61081c565b604051610288919061156d565b60405180910390f35b6102ab60048036038101906102a691906111a3565b610828565b6040516102b8919061156d565b60405180910390f35b6102c9610876565b6040516102d6919061156d565b60405180910390f35b6102f960048036038101906102f491906111a3565b610882565b6040516103069190611423565b60405180910390f35b61032960048036038101906103249190611588565b61091c565b6040516103369190611693565b60405180910390f35b610359600480360381019061035491906116b5565b610a44565b60405161036691906119b8565b60405180910390f35b610389600480360381019061038491906111a3565b610e01565b6040516103969190611423565b60405180910390f35b6103b960048036038101906103b491906111a3565b610e9b565b6040516103c69190611423565b60405180910390f35b6060600060050180548060200260200160405190810160405280929190818152602001828054801561045657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161040c575b5050505050905090565b610468610f35565b600060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201805461051290611a09565b80601f016020809104026020016040519081016040528092919081815260200182805461053e90611a09565b801561058b5780601f106105605761010080835404028352916020019161058b565b820191906000526020600020905b81548152906001019060200180831161056e57829003601f168201915b5050505050815250509050919050565b60606000600f0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561062957602002820191906000526020600020905b815481526020019060010190808311610615575b50505050509050919050565b600080600501828154811061064d5761064c611a3a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008060070160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905092915050565b60606000600a0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561077757602002820191906000526020600020905b815481526020019060010190808311610763575b50505050509050919050565b600080600b0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401549050919050565b60008060020154905090565b60008060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050919050565b60008060030154905090565b60606000600d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561091057602002820191906000526020600020905b8154815260200190600101908083116108fc575b50505050509050919050565b610924610f74565b6000601101600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820180546109b090611a09565b80601f01602080910402602001604051908101604052809291908181526020018280546109dc90611a09565b8015610a295780601f106109fe57610100808354040283529160200191610a29565b820191906000526020600020905b815481529060010190602001808311610a0c57829003601f168201915b50505050508152602001600482015481525050905092915050565b610a4c610fa6565b6000600c01600083815260200190815260200160002060405180610180016040529081600082018054610a7e90611a09565b80601f0160208091040260200160405190810160405280929190818152602001828054610aaa90611a09565b8015610af75780601f10610acc57610100808354040283529160200191610af7565b820191906000526020600020905b815481529060010190602001808311610ada57829003601f168201915b505050505081526020016001820160009054906101000a900460ff166002811115610b2557610b246116e2565b5b6002811115610b3757610b366116e2565b5b81526020016001820160019054906101000a900460ff161515151581526020016001820160029054906101000a900460ff1660ff1660ff168152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610c58578382906000526020600020018054610bcb90611a09565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf790611a09565b8015610c445780601f10610c1957610100808354040283529160200191610c44565b820191906000526020600020905b815481529060010190602001808311610c2757829003601f168201915b505050505081526020019060010190610bac565b505050508152602001600582015481526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160098201805480602002602001604051908101604052809291908181526020018280548015610df157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610da7575b5050505050815250509050919050565b60606000600e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610e8f57602002820191906000526020600020905b815481526020019060010190808311610e7b575b50505050509050919050565b6060600060090160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610f2957602002820191906000526020600020905b815481526020019060010190808311610f15575b50505050509050919050565b6040518060e001604052806000151581526020016000815260200160008152602001600081526020016000815260200160008152602001606081525090565b6040518060a0016040528060008152602001600081526020016000801916815260200160608152602001600081525090565b6040518061018001604052806060815260200160006002811115610fcd57610fcc6116e2565b5b8152602001600015158152602001600060ff16815260200160008152602001600081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110b78261108c565b9050919050565b6110c7816110ac565b82525050565b60006110d983836110be565b60208301905092915050565b6000602082019050919050565b60006110fd82611060565b611107818561106b565b93506111128361107c565b8060005b8381101561114357815161112a88826110cd565b9750611135836110e5565b925050600181019050611116565b5085935050505092915050565b6000602082019050818103600083015261116a81846110f2565b905092915050565b600080fd5b611180816110ac565b811461118b57600080fd5b50565b60008135905061119d81611177565b92915050565b6000602082840312156111b9576111b8611172565b5b60006111c78482850161118e565b91505092915050565b60008115159050919050565b6111e5816111d0565b82525050565b6000819050919050565b6111fe816111eb565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561123e578082015181840152602081019050611223565b8381111561124d576000848401525b50505050565b6000601f19601f8301169050919050565b600061126f82611204565b611279818561120f565b9350611289818560208601611220565b61129281611253565b840191505092915050565b600060e0830160008301516112b560008601826111dc565b5060208301516112c860208601826111f5565b5060408301516112db60408601826111f5565b5060608301516112ee60608601826111f5565b50608083015161130160808601826111f5565b5060a083015161131460a08601826111f5565b5060c083015184820360c086015261132c8282611264565b9150508091505092915050565b60006020820190508181036000830152611353818461129d565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61139a81611387565b82525050565b60006113ac8383611391565b60208301905092915050565b6000602082019050919050565b60006113d08261135b565b6113da8185611366565b93506113e583611377565b8060005b838110156114165781516113fd88826113a0565b9750611408836113b8565b9250506001810190506113e9565b5085935050505092915050565b6000602082019050818103600083015261143d81846113c5565b905092915050565b61144e816111eb565b811461145957600080fd5b50565b60008135905061146b81611445565b92915050565b60006020828403121561148757611486611172565b5b60006114958482850161145c565b91505092915050565b6114a7816110ac565b82525050565b60006020820190506114c2600083018461149e565b92915050565b6114d181611387565b81146114dc57600080fd5b50565b6000813590506114ee816114c8565b92915050565b6000806040838503121561150b5761150a611172565b5b60006115198582860161118e565b925050602061152a858286016114df565b9150509250929050565b61153d816111d0565b82525050565b60006020820190506115586000830184611534565b92915050565b611567816111eb565b82525050565b6000602082019050611582600083018461155e565b92915050565b6000806040838503121561159f5761159e611172565b5b60006115ad858286016114df565b92505060206115be8582860161118e565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60006115ef826115c8565b6115f981856115d3565b9350611609818560208601611220565b61161281611253565b840191505092915050565b600060a08301600083015161163560008601826111f5565b50602083015161164860208601826111f5565b50604083015161165b6040860182611391565b506060830151848203606086015261167382826115e4565b915050608083015161168860808601826111f5565b508091505092915050565b600060208201905081810360008301526116ad818461161d565b905092915050565b6000602082840312156116cb576116ca611172565b5b60006116d9848285016114df565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110611722576117216116e2565b5b50565b600081905061173382611711565b919050565b600061174382611725565b9050919050565b61175381611738565b82525050565b600060ff82169050919050565b61176f81611759565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006117ad8383611264565b905092915050565b6000602082019050919050565b60006117cd82611775565b6117d78185611780565b9350836020820285016117e985611791565b8060005b85811015611825578484038952815161180685826117a1565b9450611811836117b5565b925060208a019950506001810190506117ed565b50829750879550505050505092915050565b600082825260208201905092915050565b600061185382611060565b61185d8185611837565b93506118688361107c565b8060005b8381101561189957815161188088826110cd565b975061188b836110e5565b92505060018101905061186c565b5085935050505092915050565b60006101808301600083015184820360008601526118c48282611264565b91505060208301516118d9602086018261174a565b5060408301516118ec60408601826111dc565b5060608301516118ff6060860182611766565b50608083015161191260808601826111f5565b5060a083015161192560a08601826111f5565b5060c083015184820360c086015261193d82826117c2565b91505060e083015161195260e08601826111f5565b506101008301516119676101008601826110be565b5061012083015161197c6101208601826110be565b506101408301516119916101408601826110be565b506101608301518482036101608601526119ab8282611848565b9150508091505092915050565b600060208201905081810360008301526119d281846118a6565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a2157607f821691505b602082108103611a3457611a336119da565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212209bd039198ff04540f7684d9a879944a83749b5c51d01ac1113b15d8bcf165a9564736f6c634300080d0033";

export class ViewStateFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ViewStateFacet> {
    return super.deploy(overrides || {}) as Promise<ViewStateFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ViewStateFacet {
    return super.attach(address) as ViewStateFacet;
  }
  connect(signer: Signer): ViewStateFacet__factory {
    return super.connect(signer) as ViewStateFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ViewStateFacetInterface {
    return new utils.Interface(_abi) as ViewStateFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ViewStateFacet {
    return new Contract(address, _abi, signerOrProvider) as ViewStateFacet;
  }
}
