/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ViewStateFacet,
  ViewStateFacetInterface,
} from "../ViewStateFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistAccusals",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistCleanups",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
    ],
    name: "getArchaeologistSuccessOnSarcophagus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistsarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getAvailableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getCursedBond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "embalmer",
        type: "address",
      },
    ],
    name: "getEmbalmersarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getFreeBond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProtocolFeeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "getRecipientsarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
    ],
    name: "getSarcophagus",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum LibTypes.SarcophagusState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "canBeTransferred",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "minShards",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "resurrectionTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resurrectionWindow",
            type: "uint256",
          },
          {
            internalType: "string[]",
            name: "arweaveTxIds",
            type: "string[]",
          },
          {
            internalType: "uint256",
            name: "storageFee",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "embalmer",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipientAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "arweaveArchaeologist",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "archaeologists",
            type: "address[]",
          },
        ],
        internalType: "struct LibTypes.Sarcophagus",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getSarcophagusArchaeologist",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "diggingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bounty",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "doubleHashedShard",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "unencryptedShard",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "curseTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct LibTypes.ArchaeologistStorage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalProtocolFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611593806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80638ea52bb21161008c578063b7688b7c11610066578063b7688b7c1461025f578063dc231f431461028f578063de116f06146102bf578063f1a03938146102ef576100ce565b80638ea52bb2146101f35780638fbd55d2146102115780639c54563914610241576100ce565b806280357f146100d35780636ba5c8ef146101035780637819551b1461013357806378b4170614610163578063873e31fa1461019357806387927ce6146101c3575b600080fd5b6100ed60048036038101906100e89190610db8565b61031f565b6040516100fa9190610ead565b60405180910390f35b61011d60048036038101906101189190610efb565b6103b9565b60405161012a9190610f56565b60405180910390f35b61014d60048036038101906101489190610db8565b610423565b60405161015a9190610ead565b60405180910390f35b61017d60048036038101906101789190610db8565b6104bd565b60405161018a9190610ead565b60405180910390f35b6101ad60048036038101906101a89190610db8565b610557565b6040516101ba9190610f8a565b60405180910390f35b6101dd60048036038101906101d89190610db8565b6105a2565b6040516101ea9190610f8a565b60405180910390f35b6101fb6105ed565b6040516102089190610f8a565b60405180910390f35b61022b60048036038101906102269190610db8565b6105f9565b6040516102389190610f8a565b60405180910390f35b610249610644565b6040516102569190610f8a565b60405180910390f35b61027960048036038101906102749190610db8565b610650565b6040516102869190610ead565b60405180910390f35b6102a960048036038101906102a49190610fa5565b6106ea565b6040516102b69190611103565b60405180910390f35b6102d960048036038101906102d49190611125565b610812565b6040516102e691906114db565b60405180910390f35b61030960048036038101906103049190610db8565b610bcf565b6040516103169190610ead565b60405180910390f35b60606000600f0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156103ad57602002820191906000526020600020905b815481526020019060010190808311610399575b50505050509050919050565b60008060070160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905092915050565b60606000600a0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156104b157602002820191906000526020600020905b81548152602001906001019080831161049d575b50505050509050919050565b60606000600d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561054b57602002820191906000526020600020905b815481526020019060010190808311610537575b50505050509050919050565b600080600b0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060020154905090565b60008060050160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060030154905090565b60606000600e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156106de57602002820191906000526020600020905b8154815260200190600101908083116106ca575b50505050509050919050565b6106f2610c69565b6000601101600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201805461077e9061152c565b80601f01602080910402602001604051908101604052809291908181526020018280546107aa9061152c565b80156107f75780601f106107cc576101008083540402835291602001916107f7565b820191906000526020600020905b8154815290600101906020018083116107da57829003601f168201915b50505050508152602001600482015481525050905092915050565b61081a610c9b565b6000600c0160008381526020019081526020016000206040518061018001604052908160008201805461084c9061152c565b80601f01602080910402602001604051908101604052809291908181526020018280546108789061152c565b80156108c55780601f1061089a576101008083540402835291602001916108c5565b820191906000526020600020905b8154815290600101906020018083116108a857829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660028111156108f3576108f26111a7565b5b6002811115610905576109046111a7565b5b81526020016001820160019054906101000a900460ff161515151581526020016001820160029054906101000a900460ff1660ff1660ff168152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610a265783829060005260206000200180546109999061152c565b80601f01602080910402602001604051908101604052809291908181526020018280546109c59061152c565b8015610a125780601f106109e757610100808354040283529160200191610a12565b820191906000526020600020905b8154815290600101906020018083116109f557829003601f168201915b50505050508152602001906001019061097a565b505050508152602001600582015481526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160098201805480602002602001604051908101604052809291908181526020018280548015610bbf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b75575b5050505050815250509050919050565b6060600060090160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610c5d57602002820191906000526020600020905b815481526020019060010190808311610c49575b50505050509050919050565b6040518060a0016040528060008152602001600081526020016000801916815260200160608152602001600081525090565b6040518061018001604052806060815260200160006002811115610cc257610cc16111a7565b5b8152602001600015158152602001600060ff16815260200160008152602001600081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d8582610d5a565b9050919050565b610d9581610d7a565b8114610da057600080fd5b50565b600081359050610db281610d8c565b92915050565b600060208284031215610dce57610dcd610d55565b5b6000610ddc84828501610da3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b610e2481610e11565b82525050565b6000610e368383610e1b565b60208301905092915050565b6000602082019050919050565b6000610e5a82610de5565b610e648185610df0565b9350610e6f83610e01565b8060005b83811015610ea0578151610e878882610e2a565b9750610e9283610e42565b925050600181019050610e73565b5085935050505092915050565b60006020820190508181036000830152610ec78184610e4f565b905092915050565b610ed881610e11565b8114610ee357600080fd5b50565b600081359050610ef581610ecf565b92915050565b60008060408385031215610f1257610f11610d55565b5b6000610f2085828601610da3565b9250506020610f3185828601610ee6565b9150509250929050565b60008115159050919050565b610f5081610f3b565b82525050565b6000602082019050610f6b6000830184610f47565b92915050565b6000819050919050565b610f8481610f71565b82525050565b6000602082019050610f9f6000830184610f7b565b92915050565b60008060408385031215610fbc57610fbb610d55565b5b6000610fca85828601610ee6565b9250506020610fdb85828601610da3565b9150509250929050565b610fee81610f71565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561102e578082015181840152602081019050611013565b8381111561103d576000848401525b50505050565b6000601f19601f8301169050919050565b600061105f82610ff4565b6110698185610fff565b9350611079818560208601611010565b61108281611043565b840191505092915050565b600060a0830160008301516110a56000860182610fe5565b5060208301516110b86020860182610fe5565b5060408301516110cb6040860182610e1b565b50606083015184820360608601526110e38282611054565b91505060808301516110f86080860182610fe5565b508091505092915050565b6000602082019050818103600083015261111d818461108d565b905092915050565b60006020828403121561113b5761113a610d55565b5b600061114984828501610ee6565b91505092915050565b600081519050919050565b600082825260208201905092915050565b600061117982611152565b611183818561115d565b9350611193818560208601611010565b61119c81611043565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106111e7576111e66111a7565b5b50565b60008190506111f8826111d6565b919050565b6000611208826111ea565b9050919050565b611218816111fd565b82525050565b61122781610f3b565b82525050565b600060ff82169050919050565b6112438161122d565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611281838361116e565b905092915050565b6000602082019050919050565b60006112a182611249565b6112ab8185611254565b9350836020820285016112bd85611265565b8060005b858110156112f957848403895281516112da8582611275565b94506112e583611289565b925060208a019950506001810190506112c1565b50829750879550505050505092915050565b61131481610d7a565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611352838361130b565b60208301905092915050565b6000602082019050919050565b60006113768261131a565b6113808185611325565b935061138b83611336565b8060005b838110156113bc5781516113a38882611346565b97506113ae8361135e565b92505060018101905061138f565b5085935050505092915050565b60006101808301600083015184820360008601526113e7828261116e565b91505060208301516113fc602086018261120f565b50604083015161140f604086018261121e565b506060830151611422606086018261123a565b5060808301516114356080860182610fe5565b5060a083015161144860a0860182610fe5565b5060c083015184820360c08601526114608282611296565b91505060e083015161147560e0860182610fe5565b5061010083015161148a61010086018261130b565b5061012083015161149f61012086018261130b565b506101408301516114b461014086018261130b565b506101608301518482036101608601526114ce828261136b565b9150508091505092915050565b600060208201905081810360008301526114f581846113c9565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061154457607f821691505b602082108103611557576115566114fd565b5b5091905056fea2646970667358221220f828521de3d3f433cd63daab00eebb452149dd514eee270824e8b3c1dbd3d8d264736f6c634300080d0033";

export class ViewStateFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ViewStateFacet> {
    return super.deploy(overrides || {}) as Promise<ViewStateFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ViewStateFacet {
    return super.attach(address) as ViewStateFacet;
  }
  connect(signer: Signer): ViewStateFacet__factory {
    return super.connect(signer) as ViewStateFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ViewStateFacetInterface {
    return new utils.Interface(_abi) as ViewStateFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ViewStateFacet {
    return new Contract(address, _abi, signerOrProvider) as ViewStateFacet;
  }
}
