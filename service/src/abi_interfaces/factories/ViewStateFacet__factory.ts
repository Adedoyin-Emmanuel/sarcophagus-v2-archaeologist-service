/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ViewStateFacet,
  ViewStateFacetInterface,
} from "../ViewStateFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistAccusals",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistCleanups",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistProfile",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "string",
            name: "peerId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "minimumDiggingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maximumRewrapInterval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "freeBond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cursedBond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewards",
            type: "uint256",
          },
        ],
        internalType: "struct LibTypes.ArchaeologistProfile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getArchaeologistProfileAddressAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getArchaeologistProfileAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistSarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
    ],
    name: "getArchaeologistSuccessOnSarcophagus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getAvailableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getCursedBond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "embalmer",
        type: "address",
      },
    ],
    name: "getEmbalmerSarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getFreeBond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProtocolFeeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "getRecipientSarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
    ],
    name: "getSarcophagus",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum LibTypes.SarcophagusState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "canBeTransferred",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "minShards",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "resurrectionTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resurrectionWindow",
            type: "uint256",
          },
          {
            internalType: "string[]",
            name: "arweaveTxIds",
            type: "string[]",
          },
          {
            internalType: "address",
            name: "embalmer",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipientAddress",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "archaeologists",
            type: "address[]",
          },
        ],
        internalType: "struct LibTypes.Sarcophagus",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getSarcophagusArchaeologist",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "diggingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "diggingFeesPaid",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "unencryptedShardDoubleHash",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "unencryptedShard",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "curseTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct LibTypes.ArchaeologistStorage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalProtocolFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506119f1806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638ea52bb211610097578063dc231f4311610066578063dc231f431461030f578063de116f061461033f578063ef60e4e71461036f578063f1a039381461039f57610100565b80638ea52bb2146102735780638fbd55d2146102915780639c545639146102c1578063c34e9bff146102df57610100565b80636ba5c8ef116100d35780636ba5c8ef146101b35780637819551b146101e3578063873e31fa1461021357806387927ce61461024357610100565b80633fbb89301461010557806342e10bc8146101235780634d0b67671461015357806357babbaf14610183575b600080fd5b61010d6103cf565b60405161011a91906110cc565b60405180910390f35b61013d6004803603810190610138919061111f565b610460565b60405161014a91906112b5565b60405180910390f35b61016d6004803603810190610168919061111f565b61059b565b60405161017a919061139f565b60405180910390f35b61019d600480360381019061019891906113ed565b610635565b6040516101aa9190611429565b60405180910390f35b6101cd60048036038101906101c89190611470565b61067f565b6040516101da91906114bf565b60405180910390f35b6101fd60048036038101906101f8919061111f565b6106e9565b60405161020a919061139f565b60405180910390f35b61022d6004803603810190610228919061111f565b610783565b60405161023a91906114e9565b60405180910390f35b61025d6004803603810190610258919061111f565b6107ce565b60405161026a91906114e9565b60405180910390f35b61027b61081c565b60405161028891906114e9565b60405180910390f35b6102ab60048036038101906102a6919061111f565b610828565b6040516102b891906114e9565b60405180910390f35b6102c9610876565b6040516102d691906114e9565b60405180910390f35b6102f960048036038101906102f4919061111f565b610882565b604051610306919061139f565b60405180910390f35b61032960048036038101906103249190611504565b61091c565b604051610336919061160f565b60405180910390f35b61035960048036038101906103549190611631565b610a44565b604051610366919061190a565b60405180910390f35b6103896004803603810190610384919061111f565b610da1565b604051610396919061139f565b60405180910390f35b6103b960048036038101906103b4919061111f565b610e3b565b6040516103c6919061139f565b60405180910390f35b6060600060050180548060200260200160405190810160405280929190818152602001828054801561045657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161040c575b5050505050905090565b610468610ed5565b600060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820160009054906101000a900460ff161515151581526020016001820180546104e09061195b565b80601f016020809104026020016040519081016040528092919081815260200182805461050c9061195b565b80156105595780601f1061052e57610100808354040283529160200191610559565b820191906000526020600020905b81548152906001019060200180831161053c57829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815250509050919050565b60606000600f0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561062957602002820191906000526020600020905b815481526020019060010190808311610615575b50505050509050919050565b600080600501828154811061064d5761064c61198c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008060070160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905092915050565b60606000600a0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561077757602002820191906000526020600020905b815481526020019060010190808311610763575b50505050509050919050565b600080600b0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501549050919050565b60008060020154905090565b60008060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401549050919050565b60008060030154905090565b60606000600d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561091057602002820191906000526020600020905b8154815260200190600101908083116108fc575b50505050509050919050565b610924610f14565b6000601101600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820180546109b09061195b565b80601f01602080910402602001604051908101604052809291908181526020018280546109dc9061195b565b8015610a295780601f106109fe57610100808354040283529160200191610a29565b820191906000526020600020905b815481529060010190602001808311610a0c57829003601f168201915b50505050508152602001600482015481525050905092915050565b610a4c610f46565b6000600c01600083815260200190815260200160002060405180610140016040529081600082018054610a7e9061195b565b80601f0160208091040260200160405190810160405280929190818152602001828054610aaa9061195b565b8015610af75780601f10610acc57610100808354040283529160200191610af7565b820191906000526020600020905b815481529060010190602001808311610ada57829003601f168201915b505050505081526020016001820160009054906101000a900460ff166002811115610b2557610b2461165e565b5b6002811115610b3757610b3661165e565b5b81526020016001820160019054906101000a900460ff161515151581526020016001820160029054906101000a900460ff1660ff1660ff168152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610c58578382906000526020600020018054610bcb9061195b565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf79061195b565b8015610c445780601f10610c1957610100808354040283529160200191610c44565b820191906000526020600020905b815481529060010190602001808311610c2757829003601f168201915b505050505081526020019060010190610bac565b5050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160078201805480602002602001604051908101604052809291908181526020018280548015610d9157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d47575b5050505050815250509050919050565b60606000600e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610e2f57602002820191906000526020600020905b815481526020019060010190808311610e1b575b50505050509050919050565b6060600060090160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610ec957602002820191906000526020600020905b815481526020019060010190808311610eb5575b50505050509050919050565b6040518060e001604052806000151581526020016060815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060a0016040528060008152602001600081526020016000801916815260200160608152602001600081525090565b6040518061014001604052806060815260200160006002811115610f6d57610f6c61165e565b5b8152602001600015158152602001600060ff168152602001600081526020016000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061103382611008565b9050919050565b61104381611028565b82525050565b6000611055838361103a565b60208301905092915050565b6000602082019050919050565b600061107982610fdc565b6110838185610fe7565b935061108e83610ff8565b8060005b838110156110bf5781516110a68882611049565b97506110b183611061565b925050600181019050611092565b5085935050505092915050565b600060208201905081810360008301526110e6818461106e565b905092915050565b600080fd5b6110fc81611028565b811461110757600080fd5b50565b600081359050611119816110f3565b92915050565b600060208284031215611135576111346110ee565b5b60006111438482850161110a565b91505092915050565b60008115159050919050565b6111618161114c565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111a1578082015181840152602081019050611186565b838111156111b0576000848401525b50505050565b6000601f19601f8301169050919050565b60006111d282611167565b6111dc8185611172565b93506111ec818560208601611183565b6111f5816111b6565b840191505092915050565b6000819050919050565b61121381611200565b82525050565b600060e0830160008301516112316000860182611158565b506020830151848203602086015261124982826111c7565b915050604083015161125e604086018261120a565b506060830151611271606086018261120a565b506080830151611284608086018261120a565b5060a083015161129760a086018261120a565b5060c08301516112aa60c086018261120a565b508091505092915050565b600060208201905081810360008301526112cf8184611219565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61131681611303565b82525050565b6000611328838361130d565b60208301905092915050565b6000602082019050919050565b600061134c826112d7565b61135681856112e2565b9350611361836112f3565b8060005b83811015611392578151611379888261131c565b975061138483611334565b925050600181019050611365565b5085935050505092915050565b600060208201905081810360008301526113b98184611341565b905092915050565b6113ca81611200565b81146113d557600080fd5b50565b6000813590506113e7816113c1565b92915050565b600060208284031215611403576114026110ee565b5b6000611411848285016113d8565b91505092915050565b61142381611028565b82525050565b600060208201905061143e600083018461141a565b92915050565b61144d81611303565b811461145857600080fd5b50565b60008135905061146a81611444565b92915050565b60008060408385031215611487576114866110ee565b5b60006114958582860161110a565b92505060206114a68582860161145b565b9150509250929050565b6114b98161114c565b82525050565b60006020820190506114d460008301846114b0565b92915050565b6114e381611200565b82525050565b60006020820190506114fe60008301846114da565b92915050565b6000806040838503121561151b5761151a6110ee565b5b60006115298582860161145b565b925050602061153a8582860161110a565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b600061156b82611544565b611575818561154f565b9350611585818560208601611183565b61158e816111b6565b840191505092915050565b600060a0830160008301516115b1600086018261120a565b5060208301516115c4602086018261120a565b5060408301516115d7604086018261130d565b50606083015184820360608601526115ef8282611560565b9150506080830151611604608086018261120a565b508091505092915050565b600060208201905081810360008301526116298184611599565b905092915050565b600060208284031215611647576116466110ee565b5b60006116558482850161145b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061169e5761169d61165e565b5b50565b60008190506116af8261168d565b919050565b60006116bf826116a1565b9050919050565b6116cf816116b4565b82525050565b600060ff82169050919050565b6116eb816116d5565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061172983836111c7565b905092915050565b6000602082019050919050565b6000611749826116f1565b61175381856116fc565b9350836020820285016117658561170d565b8060005b858110156117a15784840389528151611782858261171d565b945061178d83611731565b925060208a01995050600181019050611769565b50829750879550505050505092915050565b600082825260208201905092915050565b60006117cf82610fdc565b6117d981856117b3565b93506117e483610ff8565b8060005b838110156118155781516117fc8882611049565b975061180783611061565b9250506001810190506117e8565b5085935050505092915050565b600061014083016000830151848203600086015261184082826111c7565b915050602083015161185560208601826116c6565b5060408301516118686040860182611158565b50606083015161187b60608601826116e2565b50608083015161188e608086018261120a565b5060a08301516118a160a086018261120a565b5060c083015184820360c08601526118b9828261173e565b91505060e08301516118ce60e086018261103a565b506101008301516118e361010086018261103a565b506101208301518482036101208601526118fd82826117c4565b9150508091505092915050565b600060208201905081810360008301526119248184611822565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061197357607f821691505b6020821081036119865761198561192c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212202b4ab9c752e74669b3aafc06769fefb2c168d01c6fd1a29c89f2ea7bdb0dab2964736f6c634300080d0033";

export class ViewStateFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ViewStateFacet> {
    return super.deploy(overrides || {}) as Promise<ViewStateFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ViewStateFacet {
    return super.attach(address) as ViewStateFacet;
  }
  connect(signer: Signer): ViewStateFacet__factory {
    return super.connect(signer) as ViewStateFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ViewStateFacetInterface {
    return new utils.Interface(_abi) as ViewStateFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ViewStateFacet {
    return new Contract(address, _abi, signerOrProvider) as ViewStateFacet;
  }
}
