/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ViewStateFacet,
  ViewStateFacetInterface,
} from "../ViewStateFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistAccusals",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistCleanups",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistProfile",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "minimumDiggingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maximumRewrapInterval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "freeBond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cursedBond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewards",
            type: "uint256",
          },
        ],
        internalType: "struct LibTypes.ArchaeologistProfile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getArchaeologistProfileAddressAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getArchaeologistSarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
    ],
    name: "getArchaeologistSuccessOnSarcophagus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getAvailableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getCursedBond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "embalmer",
        type: "address",
      },
    ],
    name: "getEmbalmerSarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getFreeBond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProtocolFeeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "getRecipientSarcophagi",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
    ],
    name: "getSarcophagus",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum LibTypes.SarcophagusState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "canBeTransferred",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "minShards",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "resurrectionTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resurrectionWindow",
            type: "uint256",
          },
          {
            internalType: "string[]",
            name: "arweaveTxIds",
            type: "string[]",
          },
          {
            internalType: "uint256",
            name: "storageFee",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "embalmer",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipientAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "arweaveArchaeologist",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "archaeologists",
            type: "address[]",
          },
        ],
        internalType: "struct LibTypes.Sarcophagus",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sarcoId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "archaeologist",
        type: "address",
      },
    ],
    name: "getSarcophagusArchaeologist",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "diggingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bounty",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "diggingFeesPaid",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "doubleHashedShard",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "unencryptedShard",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "curseTokenId",
            type: "uint256",
          },
        ],
        internalType: "struct LibTypes.ArchaeologistStorage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalProtocolFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506118b7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638ea52bb211610097578063dc231f4311610066578063dc231f43146102e6578063de116f0614610316578063ef60e4e714610346578063f1a0393814610376576100f5565b80638ea52bb21461024a5780638fbd55d2146102685780639c54563914610298578063c34e9bff146102b6576100f5565b80636ba5c8ef116100d35780636ba5c8ef1461018a5780637819551b146101ba578063873e31fa146101ea57806387927ce61461021a576100f5565b806342e10bc8146100fa5780634d0b67671461012a57806357babbaf1461015a575b600080fd5b610114600480360381019061010f9190610f81565b6103a6565b604051610121919061105d565b60405180910390f35b610144600480360381019061013f9190610f81565b61044f565b6040516101519190611140565b60405180910390f35b610174600480360381019061016f919061118e565b6104e9565b60405161018191906111ca565b60405180910390f35b6101a4600480360381019061019f9190611211565b610533565b6040516101b19190611260565b60405180910390f35b6101d460048036038101906101cf9190610f81565b61059d565b6040516101e19190611140565b60405180910390f35b61020460048036038101906101ff9190610f81565b610637565b604051610211919061128a565b60405180910390f35b610234600480360381019061022f9190610f81565b610682565b604051610241919061128a565b60405180910390f35b6102526106d0565b60405161025f919061128a565b60405180910390f35b610282600480360381019061027d9190610f81565b6106dc565b60405161028f919061128a565b60405180910390f35b6102a061072a565b6040516102ad919061128a565b60405180910390f35b6102d060048036038101906102cb9190610f81565b610736565b6040516102dd9190611140565b60405180910390f35b61030060048036038101906102fb91906112a5565b6107d0565b60405161030d9190611407565b60405180910390f35b610330600480360381019061032b9190611429565b610902565b60405161033d91906117d0565b60405180910390f35b610360600480360381019061035b9190610f81565b610cbf565b60405161036d9190611140565b60405180910390f35b610390600480360381019061038b9190610f81565b610d59565b60405161039d9190611140565b60405180910390f35b6103ae610df3565b600060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c00160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050919050565b60606000600f0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156104dd57602002820191906000526020600020905b8154815260200190600101908083116104c9575b50505050509050919050565b6000806005018281548110610501576105006117f2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008060070160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905092915050565b60606000600a0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561062b57602002820191906000526020600020905b815481526020019060010190808311610617575b50505050509050919050565b600080600b0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401549050919050565b60008060020154905090565b60008060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050919050565b60008060030154905090565b60606000600d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156107c457602002820191906000526020600020905b8154815260200190600101908083116107b0575b50505050509050919050565b6107d8610e2b565b6000601101600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201805461086e90611850565b80601f016020809104026020016040519081016040528092919081815260200182805461089a90611850565b80156108e75780601f106108bc576101008083540402835291602001916108e7565b820191906000526020600020905b8154815290600101906020018083116108ca57829003601f168201915b50505050508152602001600582015481525050905092915050565b61090a610e64565b6000600c0160008381526020019081526020016000206040518061018001604052908160008201805461093c90611850565b80601f016020809104026020016040519081016040528092919081815260200182805461096890611850565b80156109b55780601f1061098a576101008083540402835291602001916109b5565b820191906000526020600020905b81548152906001019060200180831161099857829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660028111156109e3576109e26114ab565b5b60028111156109f5576109f46114ab565b5b81526020016001820160019054906101000a900460ff161515151581526020016001820160029054906101000a900460ff1660ff1660ff168152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610b16578382906000526020600020018054610a8990611850565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab590611850565b8015610b025780601f10610ad757610100808354040283529160200191610b02565b820191906000526020600020905b815481529060010190602001808311610ae557829003601f168201915b505050505081526020019060010190610a6a565b505050508152602001600582015481526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160098201805480602002602001604051908101604052809291908181526020018280548015610caf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c65575b5050505050815250509050919050565b60606000600e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610d4d57602002820191906000526020600020905b815481526020019060010190808311610d39575b50505050509050919050565b6060600060090160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610de757602002820191906000526020600020905b815481526020019060010190808311610dd3575b50505050509050919050565b6040518060c0016040528060001515815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060c001604052806000815260200160008152602001600081526020016000801916815260200160608152602001600081525090565b6040518061018001604052806060815260200160006002811115610e8b57610e8a6114ab565b5b8152602001600015158152602001600060ff16815260200160008152602001600081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f4e82610f23565b9050919050565b610f5e81610f43565b8114610f6957600080fd5b50565b600081359050610f7b81610f55565b92915050565b600060208284031215610f9757610f96610f1e565b5b6000610fa584828501610f6c565b91505092915050565b60008115159050919050565b610fc381610fae565b82525050565b6000819050919050565b610fdc81610fc9565b82525050565b60c082016000820151610ff86000850182610fba565b50602082015161100b6020850182610fd3565b50604082015161101e6040850182610fd3565b5060608201516110316060850182610fd3565b5060808201516110446080850182610fd3565b5060a082015161105760a0850182610fd3565b50505050565b600060c0820190506110726000830184610fe2565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6110b7816110a4565b82525050565b60006110c983836110ae565b60208301905092915050565b6000602082019050919050565b60006110ed82611078565b6110f78185611083565b935061110283611094565b8060005b8381101561113357815161111a88826110bd565b9750611125836110d5565b925050600181019050611106565b5085935050505092915050565b6000602082019050818103600083015261115a81846110e2565b905092915050565b61116b81610fc9565b811461117657600080fd5b50565b60008135905061118881611162565b92915050565b6000602082840312156111a4576111a3610f1e565b5b60006111b284828501611179565b91505092915050565b6111c481610f43565b82525050565b60006020820190506111df60008301846111bb565b92915050565b6111ee816110a4565b81146111f957600080fd5b50565b60008135905061120b816111e5565b92915050565b6000806040838503121561122857611227610f1e565b5b600061123685828601610f6c565b9250506020611247858286016111fc565b9150509250929050565b61125a81610fae565b82525050565b60006020820190506112756000830184611251565b92915050565b61128481610fc9565b82525050565b600060208201905061129f600083018461127b565b92915050565b600080604083850312156112bc576112bb610f1e565b5b60006112ca858286016111fc565b92505060206112db85828601610f6c565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561131f578082015181840152602081019050611304565b8381111561132e576000848401525b50505050565b6000601f19601f8301169050919050565b6000611350826112e5565b61135a81856112f0565b935061136a818560208601611301565b61137381611334565b840191505092915050565b600060c0830160008301516113966000860182610fd3565b5060208301516113a96020860182610fd3565b5060408301516113bc6040860182610fd3565b5060608301516113cf60608601826110ae565b50608083015184820360808601526113e78282611345565b91505060a08301516113fc60a0860182610fd3565b508091505092915050565b60006020820190508181036000830152611421818461137e565b905092915050565b60006020828403121561143f5761143e610f1e565b5b600061144d848285016111fc565b91505092915050565b600081519050919050565b600082825260208201905092915050565b600061147d82611456565b6114878185611461565b9350611497818560208601611301565b6114a081611334565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106114eb576114ea6114ab565b5b50565b60008190506114fc826114da565b919050565b600061150c826114ee565b9050919050565b61151c81611501565b82525050565b600060ff82169050919050565b61153881611522565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006115768383611472565b905092915050565b6000602082019050919050565b60006115968261153e565b6115a08185611549565b9350836020820285016115b28561155a565b8060005b858110156115ee57848403895281516115cf858261156a565b94506115da8361157e565b925060208a019950506001810190506115b6565b50829750879550505050505092915050565b61160981610f43565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006116478383611600565b60208301905092915050565b6000602082019050919050565b600061166b8261160f565b611675818561161a565b93506116808361162b565b8060005b838110156116b1578151611698888261163b565b97506116a383611653565b925050600181019050611684565b5085935050505092915050565b60006101808301600083015184820360008601526116dc8282611472565b91505060208301516116f16020860182611513565b5060408301516117046040860182610fba565b506060830151611717606086018261152f565b50608083015161172a6080860182610fd3565b5060a083015161173d60a0860182610fd3565b5060c083015184820360c0860152611755828261158b565b91505060e083015161176a60e0860182610fd3565b5061010083015161177f610100860182611600565b50610120830151611794610120860182611600565b506101408301516117a9610140860182611600565b506101608301518482036101608601526117c38282611660565b9150508091505092915050565b600060208201905081810360008301526117ea81846116be565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061186857607f821691505b60208210810361187b5761187a611821565b5b5091905056fea2646970667358221220cb35c0d40ccf5eb693ee3138b1f87eb7a65588646c45eb4d35aa3cde6952307864736f6c634300080d0033";

export class ViewStateFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ViewStateFacet> {
    return super.deploy(overrides || {}) as Promise<ViewStateFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ViewStateFacet {
    return super.attach(address) as ViewStateFacet;
  }
  connect(signer: Signer): ViewStateFacet__factory {
    return super.connect(signer) as ViewStateFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ViewStateFacetInterface {
    return new utils.Interface(_abi) as ViewStateFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ViewStateFacet {
    return new Contract(address, _abi, signerOrProvider) as ViewStateFacet;
  }
}
